!function(){"use strict";function a(a){}function b(){var a={matchCallback:void 0,nomatchCallback:void 0,routesPrefix:""},b={};this.config=function(b){return a=angular.extend({},a,b||{}),this},this.addRoute=function(a,c){var d;angular.isString(a)?(d={},d[a]={}):d=a;for(var e in d)d[e].callback=c;return angular.extend(b,d),this},this.$get=["$log","$q","$window","$ionicPlatform","$state","$injector",function(c,d,e,f,g,h){function i(){f.ready(function(){for(var c in b){if(a.routesPrefix&&a.routesPrefix.length){var d=a.routesPrefix+c;b[d]=b[c],delete b[c],c=d}console.debug("Registering deepLink "+c+":",b[c])}e.cordova&&e.IonicDeeplink.route(b,j,k)})}function j(b){var c=b.$route.callback;if(angular.isString(c))g.go(b.$route.callback,b.$args);else if(angular.isFunction(c)||angular.isArray(c))h.invoke(c,null,{$match:b});else if(angular.isDefined(c))throw new Error("Unexpected type for stateNameOrCallback. Expected string or function, found:",(typeof c));angular.isDefined(a.matchCallback)&&h.invoke(a.matchCallback,null,{$match:b})}function k(b){angular.isDefined(a.nomatchCallback)&&h.invoke(a.nomatchCallback,null,{$match:b})}var l={};return i(),l}]}function c(a,b){a.decorator("data",function(a,c){var d=c(a);if(d&&angular.isDefined(d.deepLink)){var e=a.name,f=a.url;console.debug("Deep link for ui.router state "+e);var g=d.deepLink;if(angular.isString(g))b.addRoute(g,e);else if(g===!0)b.addRoute(f,e);else if(angular.isArray(g)||angular.isFunction(g))b.addRoute(f,g);else if(angular.isObject(g)){var h={};h[f]=g,b.addRoute(h)}else console.warn("Unknown deep link configuration for state "+e,g)}return d})}var d=angular.module("mfw-ionic.deep-links",["ionic","ui.router"]);d.run(a),a.$inject=["$mfwiLinks"],d.provider("$mfwiLinks",b),b.$inject=[],d.config(c),c.$inject=["$stateProvider","$mfwiLinksProvider"]}();
//# sourceMappingURL=mfw-ionic-deep-links.service.min.js.map